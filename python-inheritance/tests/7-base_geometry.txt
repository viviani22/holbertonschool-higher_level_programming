>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> try:
...	bg.integer_validator("name", "John")
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer
>>> try:
...	bg.integer_validator("age", 0)
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] age must be greater than 0
>>> try:
...	bg.integer_validator("distance", -4)
... except Exception as e: 
...	print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] distance must be greater than 0
>>> bg.area()
Traceback (most recent call last):
[Exception] area() is not implemented 
>>> bg.integer_validator
<bound method BaseGeometry.integer_validator of <7-base_geometry.BaseGeometry object at 0x7f090dff7ac0>>
>>> bg.integer_validator(“age”, (4,))
Traceback (most recent call last):
SyntaxError: invalid character in identifier
>>> bg.integer_validator(“age”, [3])
Traceback (most recent call last):
SyntaxError: invalid character in identifier
>>> bg.integer_validator(“age”, True)
Traceback (most recent call last):
SyntaxError: invalid character in identifier
>>> bg.integer_validator(“age”, {3, 4})
Traceback (most recent call last):
SyntaxError: invalid character in identifier
>>> integer_validator(“age”, None)
Traceback (most recent call last):
SyntaxError: invalid character in identifier
